"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"b854fc1cb0e5\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzcyODQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiODU0ZmMxY2IwZTVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ColorFix.tsx":
/*!*********************************!*\
  !*** ./components/ColorFix.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ColorFix; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\nfunction ColorFix() {\n    _s();\n    const [isChrome, setIsChrome] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Detect Chrome\n        const chromeDetected = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n        setIsChrome(chromeDetected);\n        if (chromeDetected) {\n            console.log(\"Chrome detected - applying aggressive color fixes\");\n            // Create and inject Chrome-specific stylesheet\n            const chromeStyleId = \"chrome-color-fix\";\n            let chromeStyle = document.getElementById(chromeStyleId);\n            if (!chromeStyle) {\n                chromeStyle = document.createElement(\"style\");\n                chromeStyle.id = chromeStyleId;\n                document.head.appendChild(chromeStyle);\n            }\n            chromeStyle.textContent = \"\\n        /* Chrome-specific color enforcement */\\n        * {\\n          color: rgb(15, 23, 42) !important;\\n        }\\n        \\n        body {\\n          background-color: rgb(249, 250, 251) !important;\\n          color: rgb(15, 23, 42) !important;\\n        }\\n        \\n        h1, h2, h3, h4, h5, h6, p, span, div, a, button, label, li, td, th {\\n          color: rgb(15, 23, 42) !important;\\n        }\\n        \\n        .text-muted-foreground {\\n          color: rgb(100, 116, 139) !important;\\n        }\\n        \\n        .text-blue-600 {\\n          color: rgb(37, 99, 235) !important;\\n        }\\n        \\n        .text-white {\\n          color: rgb(255, 255, 255) !important;\\n        }\\n        \\n        /* Keep gradient text transparent */\\n        .text-transparent, .bg-clip-text {\\n          color: transparent !important;\\n        }\\n        \\n        /* Force Chrome to repaint */\\n        body * {\\n          -webkit-transform: translateZ(0);\\n          transform: translateZ(0);\\n        }\\n      \";\n            // Force immediate style application\n            const forceColorUpdate = ()=>{\n                // Set inline styles on all elements\n                const allElements = document.querySelectorAll(\"*\");\n                allElements.forEach((el)=>{\n                    if (el instanceof HTMLElement) {\n                        // Skip elements that should be transparent (gradients)\n                        const hasTransparentClass = el.classList.contains(\"text-transparent\") || el.classList.contains(\"bg-clip-text\");\n                        if (!hasTransparentClass) {\n                            // Apply color based on element's intended styling\n                            if (el.classList.contains(\"text-muted-foreground\")) {\n                                el.style.setProperty(\"color\", \"rgb(100, 116, 139)\", \"important\");\n                            } else if (el.classList.contains(\"text-blue-600\")) {\n                                el.style.setProperty(\"color\", \"rgb(37, 99, 235)\", \"important\");\n                            } else if (el.classList.contains(\"text-white\")) {\n                                el.style.setProperty(\"color\", \"rgb(255, 255, 255)\", \"important\");\n                            } else {\n                                el.style.setProperty(\"color\", \"rgb(15, 23, 42)\", \"important\");\n                            }\n                        }\n                    }\n                });\n            };\n            // Apply fixes immediately and on intervals\n            forceColorUpdate();\n            setTimeout(forceColorUpdate, 50);\n            setTimeout(forceColorUpdate, 200);\n            setTimeout(forceColorUpdate, 500);\n            setTimeout(forceColorUpdate, 1000);\n            // Monitor for DOM changes and reapply\n            const observer = new MutationObserver(()=>{\n                setTimeout(forceColorUpdate, 10);\n            });\n            observer.observe(document.body, {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: [\n                    \"class\",\n                    \"style\"\n                ]\n            });\n            // Cleanup\n            return ()=>{\n                observer.disconnect();\n            };\n        } else {\n            console.log(\"Safari/other browser detected - using light fixes\");\n            // Light fixes for non-Chrome browsers\n            const lightFix = ()=>{\n                document.documentElement.style.setProperty(\"--foreground\", \"222.2 84% 4.9%\");\n                document.documentElement.style.setProperty(\"--background\", \"0 0% 98%\");\n                document.documentElement.style.setProperty(\"--muted-foreground\", \"215.4 16.3% 46.9%\");\n            };\n            lightFix();\n            const timer = setTimeout(lightFix, 100);\n            return ()=>clearTimeout(timer);\n        }\n    }, []);\n    return null;\n}\n_s(ColorFix, \"qYeCxoTv5BAsMyn4Qhe+QGAVc9o=\");\n_c = ColorFix;\nvar _c;\n$RefreshReg$(_c, \"ColorFix\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ColorFix.tsx\n"));

/***/ })

});